unit UNSReport;

interface

uses
  System.Classes,
  System.Generics.Collections,
  Vcl.Controls,
  Vcl.Graphics,
  UNSReportBand;

type
  TNSReport = class(TCustomControl)
  private
    FBands: TObjectList<TNSReportBand>;
    procedure ArrangeBands;
  protected
    procedure Paint; override;
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;

    function AddBand(ABandType: TNSReportBandType): TNSReportBand;

  published
    { published declarations }
  end;

implementation



{ TNSReport }

function TNSReport.AddBand(ABandType: TNSReportBandType): TNSReportBand;
begin
  Result := TNSReportBand.Create(Self);
  Result.BandType := ABandType;
  Result.Parent := Self;
  FBands.Add(Result);
  ArrangeBands;
end;

procedure TNSReport.ArrangeBands;
var
  i: Integer;
  TopPos: Integer;
begin
  TopPos := 0;
  for i := 0 to FBands.Count - 1 do
  begin
    FBands[i].SetBounds(0, TopPos, Width, FBands[i].Height);
    TopPos := TopPos + FBands[i].Height;
  end;

end;

constructor TNSReport.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FBands := TObjectList<TNSReportBand>.Create(True);
  Width := 400;
  Height := 300;
  Color := clBtnFace;

  if csDesigning in ComponentState then
  begin
    // Crear bandas por defecto en tiempo de diseño
    AddBand(rbHeader);
    AddBand(rbDetail);
    AddBand(rbFooter);
  end;
end;

destructor TNSReport.Destroy;
begin
  FBands.Free;
  inherited;
end;

procedure TNSReport.Paint;
begin
  inherited;
  // No dibujamos directamente; las bandas son controles hijos y se dibujan solas.
end;

end.
